<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <groupId>org.craftercms</groupId>
    <artifactId>crafter-studio-remote-publishing-channel-module</artifactId>
    <packaging>amp</packaging>
    <name>Crafter CMS Alfresco Remote Publishing Channel</name>
    <description>Crafter CMS Alfresco Remote Publishing Channel</description>

    <parent>
        <groupId>org.craftercms</groupId>
        <artifactId>crafter-studio-parent</artifactId>
        <version>v2.5.0-Beta4</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

	<!--
		need to list these as a provided so that Maven doesn't download them
		and include them in the AMP, they are provided by Alfresco
	-->
	<dependencies>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-repository</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-data-model</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <scope>provided</scope>
        </dependency>

		<!--
			Example Jar dependency: will be properly packed into the AMP /lib
			directory <dependency> <groupId>rome</groupId>
			<artifactId>opensearch</artifactId> <version>0.1</version>
			</dependency>
		-->
		<!--
			Example AMP dependency: will be properly overlayed in the WAR
			produced by the integration-test phase in profile 'webapp'
			<dependency> <groupId>org.alfresco</groupId>
			<artifactId>recordsmanagement</artifactId> <version>2.1.0</version>
			<type>amp</type> </dependency>
		-->
		<!-- Don't add here amp dependencies as it will break amp packaging -->
	</dependencies>
	<!--
		The scm is required for the buildnumber-maven-plugin which is required
		for AMP version numbering REMEMBER TO PUT IT BACK IN
	-->

	<build>
        <plugins>
            <!-- Needed for cross OS compatibility in acp/zip encoding -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- By default as per http://code.google.com/p/maven-alfresco-archetypes/issues/detail?id=7 FTL are not filtered to avoid corruption.
                        | This behavior can be relaxed (in case filtering is needed in the FTLs) by selecting which files are filtered and which not as described 
                        | here http://code.google.com/p/maven-alfresco-archetypes/issues/detail?id=7#c3
                        -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.alfresco.maven.plugin</groupId>
				<artifactId>maven-amp-plugin</artifactId>
				<version>3.0.4</version>
				<extensions>true</extensions>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<!--
			Copies and filters resources in build folder so maven-amp-plugin can
			pick them up
		-->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
			<!--
				Copies and filters AMP config in the proper package
				'alfresco/module/${project.artifactId}' so to enforce full module
				naming single sourcing from POM properties
			-->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/config</directory>
				<targetPath>alfresco/module/${project.artifactId}</targetPath>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
		</resources>
    </build>

</project>
